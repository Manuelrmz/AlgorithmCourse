/* 
 * Topics:
 * Time / Space Complexity
 * Data Structures: Hash map, LikedList, Stacks, Queues, Trees, Heaps, Tries, Graphs
 * Algorithms: Quicksort, Merge sort, Binary Search, depth-first search, breadth-first search
 * 
 * Data Structure               Algorithms                Concepts
 * LinkedList              |   Breadth-First search  |  Bit Manipulation
 * Trees/Tries/Graphs      |   Depth- First search   |  Memory (stack vs heap)
 * Stacks/Queues           |   Binary Search         |  Recursion
 * Heaps                   |   Merge Sort            |  Dynamic Programming
 * Vectors / ArrayList     |   Quick sort            |  Big o Time & Space
 * Hash tables    
 * 
 * 
 * List<> is the same as an array expect that the Array has a fixed lenght, in the other hand when List<> run out of space it generate a new array with the double of size
 * and then insert all the values from the previous array.
 * 
 * LinkedList is different from a list because a each member of the list has a reference to the previous and next item.
 * 
 * DataStructure     |   Equivalent in C#
 * ArrayList         |    List<>
 * Vector            |    Array
 * LinkedList        |    LinkedList
 * Hash Table        |    Hash Table
 * 
 * 
 */